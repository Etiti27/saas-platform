name: Build & Deploy React Vite to EKS

on:
  push:
    branches: [cicd]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: SaaS_cluster_v3
  IMAGE_NAME: saas-frontend
  IMAGE_VERSION: v1.0,0 
  DOCKERHUB_USERNAME: obinna27
  NODE_COUNT: 2
  K8S_VERSION: 1.33.2
  NODE_TYPE: t3.small

jobs:
  deploy:
    name: Deploy Frontend to EKS
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout Source Code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üèóÔ∏è Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Create EKS cluster
        run: |
          eksctl create cluster \
            --name "${{ env.CLUSTER_NAME }}" \
            --version "${{ env.K8S_VERSION }}" \
            --region "${{ env.AWS_REGION }}" \
            --nodegroup-name "standard-workers" \
            --node-type "${{ env.NODE_TYPE }}" \
            --nodes "${{ env.NODE_COUNT }}" \
            --nodes-min 1 \
            --nodes-max 4 \
            --managed

      - name: eks update-kubeconfig
        run: aws eks --region "${{ env.AWS_REGION }}" update-kubeconfig --name "${{ env.CLUSTER_NAME }}"


