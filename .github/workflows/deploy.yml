name: Build & Deploy React Vite to EKS

on:
  push:
    branches: [cicd]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: SaaS_cluster
  IMAGE: obinna27/saas-frontend:v1.0.0
  DOCKERHUB_USERNAME: obinna27

jobs:
  deploy:
    name: Deploy Frontend to EKS
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Source Code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE }}

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 📦 Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: 🧱 Terraform Init
        run: terraform init -upgrade
        working-directory: ./terraform

      - name: ⚠️ Terraform Import (Handle existing AWS resources)
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          terraform import "module.eks.module.kms.aws_kms_alias.this[\"cluster\"]" "arn:aws:kms:${{ env.AWS_REGION }}:$ACCOUNT_ID:alias/eks/${{ env.CLUSTER_NAME }}" || true
          terraform import "module.eks.aws_cloudwatch_log_group.this[0]" "/aws/eks/${{ env.CLUSTER_NAME }}/cluster" || true
          terraform import "module.eks.aws_eks_cluster.this[0]" "${{ env.CLUSTER_NAME }}" || true
        working-directory: ./terraform


      - name: 📐 Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: ☁️ Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: 📥 Install kubectl & aws-iam-authenticator
        run: |
          curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.29.0/2024-03-22/bin/linux/amd64/kubectl
          chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.29.0/2024-03-22/bin/linux/amd64/aws-iam-authenticator
          chmod +x aws-iam-authenticator && sudo mv aws-iam-authenticator /usr/local/bin/aws-iam-authenticator

      - name: 🔧 Update kubeconfig to Access EKS
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: 🚀 Deploy Frontend to EKS
        run: kubectl apply -f k8s/frontend.yml

      - name: ⏳ Wait for Frontend Rollout
        run: kubectl rollout status deployment/frontend

      - name: 📂 Apply Kubernetes YAMLs (Ingress, ClusterIssuer)
        run: |
          kubectl apply -f k8s/ingress.yaml
          kubectl apply -f k8s/clusterissuer.yaml
